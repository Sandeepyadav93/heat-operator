---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: heatapis.heat.openstack.org
spec:
  group: heat.openstack.org
  names:
    kind: HeatAPI
    listKind: HeatAPIList
    plural: heatapis
    singular: heatapi
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HeatSpec defines the desired state of Heat
            properties:
              customServiceConfig:
                default: '# add your customization here'
                description: CustomServiceConfig - customize the service config using
                  this parameter to change service defaults, or overwrite rendered
                  information using raw OpenStack config format. The content gets
                  added to to /etc/<service>/<service>.conf.d directory as custom.conf
                  file.
                type: string
              databaseInstance:
                description: MariaDB instance name. Right now required by the maridb-operator
                  to get the credentials from the instance to create the DB. Might
                  not be required in future.
                type: string
              databaseUser:
                default: heat
                description: 'DatabaseUser - optional username used for heat DB, defaults
                  to heat. TODO: -> implement needs work in mariadb-operator, right
                  now only heat.'
                type: string
              debug:
                description: Debug - enable debug for different deploy stages. If
                  an init container is used, it runs and the actual action pod gets
                  started with sleep infinity
                properties:
                  bootstrap:
                    default: false
                    description: ReadyCount enable debug
                    type: boolean
                  dbSync:
                    default: false
                    description: DBSync enable debug
                    type: boolean
                  service:
                    default: false
                    description: Service enable debug
                    type: boolean
                type: object
              defaultConfigOverwrite:
                additionalProperties:
                  type: string
                description: 'ConfigOverwrite - interface to overwrite default config
                  files like e.g. policy.json. But can also be used to add additional
                  files. Those get added to the service config dir in /etc/<service>
                  . TODO: -> implement'
                type: object
              heatEngineCount:
                description: 'HeatEngineCount - interface to overwrite default number
                  of Heat engine pods. This will scale the number of Heat engine pods.
                  Note that this shouldn''t be confused with the heat.conf option
                  for num_engine_workers: n. This option provides an alternative and
                  allows the user to scale in a k8s native manner, while preseving
                  the num_engine_workers option as well.'
                format: int32
                type: integer
              passwordSelectors:
                description: PasswordSelectors - Selectors to identify the DB and
                  AdminUser password from the Secret
                properties:
                  admin:
                    default: heatPassword
                    description: Database - Selector to get the heat service password
                      from the Secret
                    type: string
                  database:
                    default: heatDatabasePassword
                    description: 'Database - Selector to get the heat Database user
                      password from the Secret TODO: not used, need change in mariadb-operator'
                    type: string
                type: object
              preserveJobs:
                default: false
                description: PreserveJobs - do not delete jobs after they finished
                  e.g. to check logs
                type: boolean
              secret:
                description: Secret containing OpenStack password information for
                  heat HeatDatabasePassword, AdminPassword
                type: string
              serviceUser:
                default: heat
                description: ServiceUser - optional username used for this service
                  to register in heat
                type: string
            type: object
          status:
            description: HeatStatus defines the observed state of Heat
            properties:
              apiEndpoint:
                additionalProperties:
                  type: string
                description: API endpoint
                type: object
              conditions:
                description: Conditions
                items:
                  description: Condition defines an observation of a API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase.
                      type: string
                    severity:
                      description: Severity provides a classification of Reason code,
                        so the current situation is immediately understandable and
                        could act accordingly. It is meant for situations where Status=False
                        and it should be indicated if it is just informational, warning
                        (next reconciliation might fix it) or an error (e.g. DB create
                        issue and no actions to automatically resolve the issue can/should
                        be done). For conditions where Status=Unknown or Status=True
                        the Severity should be SeverityNone.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              databaseHostname:
                description: Neutron Database Hostname
                type: string
              hash:
                additionalProperties:
                  type: string
                description: Map of hashes to track e.g. job status
                type: object
              heatApiReadyCount:
                description: ReadyCount of Heat API instance
                format: int32
                type: integer
              heatEngineReadyCount:
                description: ReadyCount of Heat API instance
                format: int32
                type: integer
              readyCount:
                description: ReadyCount of Heat instances
                format: int32
                type: integer
              serviceID:
                description: ServiceID - the ID of the registered service in keystone
                type: string
            type: object
        type: object
    served: true
    storage: true
